apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        config {
            keyAlias System.getenv('SIGNING_KEY') == null ? "\"\"" : System.getenv('SIGNING_KEY')
            keyPassword System.getenv('SIGNING_KEY_PASSWORD') == null ? "\"\"" : System.getenv('SIGNING_KEY_PASSWORD')
            storeFile file(System.getenv('SIGNING_STORE') == null ? "\"\"" : System.getenv('SIGNING_STORE'))
            storePassword System.getenv('SIGNING_STORE_PASSWORD') == null ? "\"\"" : System.getenv('SIGNING_STORE_PASSWORD')
        }
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "net.pvtbox.android"
        minSdkVersion 21
        targetSdkVersion 28
        multiDexEnabled true
        versionCode Integer.parseUnsignedInt(System.getenv('BUILD_NUMBER') == null ? "1" : System.getenv('BUILD_NUMBER'))
        versionName "1.9.0." + (System.getenv('BUILD_NUMBER') == null ? "0" : System.getenv('BUILD_NUMBER'))
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

    }
    dexOptions {
        preDexLibraries = false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
        // if true, emit full/absolute paths to files with errors (true by default)
        //absolutePaths true
        // if true, check all issues, including those that are off by default
        checkAllWarnings true
        // if true, treat all warnings as errors
        warningsAsErrors false
        // turn off checking the given issue id's
        disable 'TypographyFractions', 'TypographyQuotes'
        // turn on the given issue id's
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // check *only* the given issue id's
        check 'NewApi', 'InlinedApi'
        // if true, don't include source code lines in the error output
        noLines true
        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true
        // Fallback lint configuration (default severities, etc.)
        lintConfig file("default-lint.xml")
        // if true, generate a text report of issues (false by default)
        textReport true
        // location to write the output; can be a file or 'stdout'
        textOutput 'stdout'
        // if true, generate an XML report for use by for example Jenkins
        xmlReport false
        // file to write report to (if not specified, defaults to lint-results.xml)
        xmlOutput file("lint-report.xml")
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("lint-report.html")

        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
        // Set the severity of the given issues to fatal (which means they will be
        // checked during release builds (even if the lint target is not included)
        fatal 'NewApi'
        // Set the severity of the given issues to error
        error 'Wakelock', 'TextViewEdits'
        // Set the severity of the given issues to warning
        warning 'ResourceAsColor'
        // Set the severity of the given issues to ignore (same as disabling the check)
        ignore 'TypographyQuotes'
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        all {
            buildConfigField "String", "BUGFENDER_KEY", System.getenv('BUGFENDER_KEY') == null ? "\"\"" : System.getenv('BUGFENDER_KEY')
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.realm:realm-gradle-plugin:6.0.2"
    }
}
allprojects {
    repositories {
        google()
        maven { url "https://jitpack.io" }
        flatDir {
            dirs 'libs'
        }
    }
}
repositories {
    mavenCentral()
}

fileTree(dir: 'libs', include: '**/*.aar')
        .each { file ->
    dependencies.add("implementation", [
            name: file.name.lastIndexOf('.').with { it != -1 ? file.name[0..<it] : file.name },
            ext: 'aar'
    ])
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61'

    implementation 'androidx.biometric:biometric:1.0.1'
    implementation 'yogesh.firzen:FilesLister:1.0.1'
    implementation 'yogesh.firzen:MukkiyaSevaigal:1.0.7'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    implementation 'com.squareup:seismic:1.0.2'

    implementation 'com.squareup.okhttp3:okhttp:4.3.1'
    implementation 'com.datatheorem.android.trustkit:trustkit:1.1.2'
    implementation 'org.webrtc:google-webrtc:1.0.28513'

    implementation 'com.neovisionaries:nv-websocket-client:2.9'

    implementation 'com.google.protobuf:protobuf-java:3.11.1'

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    implementation 'io.realm:android-adapters:3.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'com.github.tajchert:WaitingDots:0.6.1'
    implementation 'org.apmem.tools:layouts:1.10@aar'
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.constraintlayout:constraintlayout-solver:2.0.0-beta4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    implementation 'com.bugfender.sdk:android:2.0.1'

    implementation 'com.squareup.moshi:moshi:1.9.2'
    implementation 'org.xeustechnologies:jtar:1.1'
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.mockito:mockito-core:3.2.4'
}
